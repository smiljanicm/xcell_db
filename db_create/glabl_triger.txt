CREATE FUNCTION public.global_update()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF 
AS $BODY$
		BEGIN
    	DELETE FROM global_table;
        
    	INSERT INTO global_table(id, year, site_code, site_label, country_code, longitude, latitude, elevation, temp, prec, species_code, target_proxy, cell_type, organ, system, software, contact_last_name, contact_first_name, contact_email, contact_institution_code, n_trees, n_radii, n_rings, "from", "to", trw, eww, lww, density, ldrad, ldtan, cwtrad, cwttan, lum, cwa)
        
        ;		
    END;
$BODY$;

ALTER FUNCTION public.global_update()
    OWNER TO trotsiuk;
    
   
        

CREATE TRIGGER ring_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.ring
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER measure_info_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.measure_info
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER wood_sample_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.wood_sample
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER tree_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.tree
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER site_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.site
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER person_role_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.person_role
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();

CREATE TRIGGER person_global_tr
    AFTER INSERT OR DELETE OR UPDATE OF id
    ON public.person
    FOR EACH STATEMENT
    EXECUTE PROCEDURE public.global_update();
