CREATE FUNCTION v1.global_update()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF 
AS $BODY$
		BEGIN
    	DELETE FROM v1.global_table;
        
    	INSERT INTO v1.global_table(site_id, site_code, "year", site_label, manip, country_code, longitude, latitude, elevation, temp, prec, species_code, wood_type, leaf_habit, wood_plane, organ, output, hardware, software,last_name, first_name, email, institution_code, n_trees, n_radii, n_rings, n_obs, "from", "to", ring_width, la, ldrad, ldtan, cwtrad, cwttan, cwa)
        
        
         
        ;		
    RETURN NULL;
    END;
$BODY$;

ALTER FUNCTION v1.global_update()
    OWNER TO trotsiuk;
    

CREATE TRIGGER year_global_tr
    AFTER INSERT
    ON v1.year
    FOR EACH STATEMENT
    EXECUTE PROCEDURE v1.global_update();
    
    
    
CREATE FUNCTION v1.site_global_delete()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF 
AS $BODY$
		BEGIN
    	DELETE FROM v1.global_table
    	WHERE 
    	  NOT site_id IN (select id from v1.site);		
    RETURN NULL;
    END;
$BODY$;    

ALTER FUNCTION v1.site_global_delete()
    OWNER TO trotsiuk;
    
CREATE TRIGGER site_gloval_tr
    AFTER DELETE
    ON v1.site
    FOR EACH STATEMENT
    EXECUTE PROCEDURE v1.site_global_delete();